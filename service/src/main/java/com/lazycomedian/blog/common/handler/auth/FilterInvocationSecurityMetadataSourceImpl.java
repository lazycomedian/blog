package com.lazycomedian.blog.common.handler.auth;import org.springframework.security.access.ConfigAttribute;import org.springframework.security.access.SecurityConfig;import org.springframework.security.web.FilterInvocation;import org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource;import java.util.Collection;/** * 接口拦截规则 * * @author lazyComedian * @date 2022/6/30 22:43 **/public class FilterInvocationSecurityMetadataSourceImpl implements FilterInvocationSecurityMetadataSource {    private static final Collection<ConfigAttribute> NOT_PASS = SecurityConfig.createList("disable");    /**     * @return null: 放行 SecurityConfig.createList("disable"): 禁止通行     */    @Override    public Collection<ConfigAttribute> getAttributes(Object object) throws IllegalArgumentException {//        return NOT_PASS;        return null;    }    @Override    public Collection<ConfigAttribute> getAllConfigAttributes() {        return null;    }    @Override    public boolean supports(Class<?> clazz) {        return FilterInvocation.class.isAssignableFrom(clazz);    }}